{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useParams,useNavigate}from'react-router-dom';import io from'socket.io-client';import'./ChatScreen.css';import backIcon from'../assets/back.png';import groupIcon from'../assets/group.png';// Ensure the socket connection is not duplicated\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const socket=io('http://localhost:5001');const ChatScreen=()=>{const{exchangeName}=useParams();const[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState('');const navigate=useNavigate();const messageHandlerRef=useRef(null);// Ref to store the handler\nuseEffect(()=>{console.log(`Joining exchange: ${exchangeName}`);socket.emit('join',exchangeName);// Set up the message handler if it doesn't exist already\nconst handleMessage=message=>{console.log('Received message:',message);// Debugging log\nsetMessages(prevMessages=>[...prevMessages,message]);};socket.on('message',handleMessage);// Clean up when the component unmounts or exchangeName changes\nreturn()=>{console.log(`Cleaning up listener for: ${exchangeName}`);socket.off('message',handleMessage);};},[exchangeName]);const handleSendMessage=()=>{if(newMessage.trim()){console.log(`Sending message: ${newMessage}`);socket.emit('sendMessage',{exchangeName,message:newMessage});setMessages(prevMessages=>[...prevMessages,newMessage]);setNewMessage('');}};const handleBack=()=>{navigate('/rooms');};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-screen\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:backIcon,alt:\"Back\",className:\"back-icon\",onClick:handleBack}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-info\",children:[/*#__PURE__*/_jsx(\"img\",{src:groupIcon,alt:\"Group Icon\",className:\"group-icon\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"room-name\",children:exchangeName})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"call-button\",children:\"\\uD83D\\uDCDE\"}),/*#__PURE__*/_jsx(\"button\",{className:\"video-button\",children:\"\\uD83D\\uDCF9\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-messages\",children:messages.map((message,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"message\",children:[/*#__PURE__*/_jsx(\"p\",{children:message}),/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:\"12:00\"})]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type here ...\",value:newMessage,onChange:e=>setNewMessage(e.target.value),onKeyDown:e=>e.key==='Enter'&&handleSendMessage()}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,className:\"send-button\",children:\"Send\"})]})]});};export default ChatScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","io","backIcon","groupIcon","jsx","_jsx","jsxs","_jsxs","socket","ChatScreen","exchangeName","messages","setMessages","newMessage","setNewMessage","navigate","messageHandlerRef","console","log","emit","handleMessage","message","prevMessages","on","off","handleSendMessage","trim","handleBack","className","children","src","alt","onClick","map","index","type","placeholder","value","onChange","e","target","onKeyDown","key"],"sources":["/Users/tanvirrahman/Desktop/chat-app/src/components/ChatScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport './ChatScreen.css';\nimport backIcon from '../assets/back.png';\nimport groupIcon from '../assets/group.png';\n\n// Ensure the socket connection is not duplicated\nconst socket = io('http://localhost:5001');\n\nconst ChatScreen = () => {\n    const { exchangeName } = useParams();\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    const navigate = useNavigate();\n\n    const messageHandlerRef = useRef(null); // Ref to store the handler\n\n    useEffect(() => {\n        console.log(`Joining exchange: ${exchangeName}`);\n        socket.emit('join', exchangeName);\n\n        // Set up the message handler if it doesn't exist already\n        const handleMessage = (message) => {\n            console.log('Received message:', message); // Debugging log\n            setMessages((prevMessages) => [...prevMessages, message]);\n        };\n\n        socket.on('message', handleMessage);\n\n        // Clean up when the component unmounts or exchangeName changes\n        return () => {\n            console.log(`Cleaning up listener for: ${exchangeName}`);\n            socket.off('message', handleMessage);\n        };\n    }, [exchangeName]);\n\n    const handleSendMessage = () => {\n        if (newMessage.trim()) {\n            console.log(`Sending message: ${newMessage}`);\n            socket.emit('sendMessage', { exchangeName, message: newMessage });\n            setMessages((prevMessages) => [...prevMessages, newMessage]);\n            setNewMessage('');\n        }\n    };\n\n    const handleBack = () => {\n        navigate('/rooms');\n    };\n\n    return (\n        <div className=\"chat-screen\">\n            <div className=\"chat-header\">\n                <img src={backIcon} alt=\"Back\" className=\"back-icon\" onClick={handleBack} />\n                <div className=\"chat-info\">\n                    <img src={groupIcon} alt=\"Group Icon\" className=\"group-icon\" />\n                    <h2 className=\"room-name\">{exchangeName}</h2>\n                </div>\n                <div className=\"chat-actions\">\n                    <button className=\"call-button\">ðŸ“ž</button>\n                    <button className=\"video-button\">ðŸ“¹</button>\n                </div>\n            </div>\n            <div className=\"chat-messages\">\n                {messages.map((message, index) => (\n                    <div key={index} className=\"message\">\n                        <p>{message}</p>\n                        <span className=\"time\">12:00</span>\n                    </div>\n                ))}\n            </div>\n            <div className=\"chat-input\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Type here ...\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    onKeyDown={(e) => e.key === 'Enter' && handleSendMessage()}\n                />\n                <button onClick={handleSendMessage} className=\"send-button\">Send</button>\n            </div>\n        </div>\n    );\n};\n\nexport default ChatScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}