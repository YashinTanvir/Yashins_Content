{"ast":null,"code":"var _jsxFileName = \"/Users/tanvirrahman/Desktop/chat-app/src/components/ChatScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport './ChatScreen.css';\nimport backIcon from '../assets/back.png';\nimport groupIcon from '../assets/group.png';\nimport sendIcon from '../assets/send.png';\nimport audioIcon from '../assets/audio.png';\nimport videoIcon from '../assets/video.png';\nimport attachmentIcon from '../assets/attachment.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5001');\nconst ChatScreen = () => {\n  _s();\n  const {\n    exchangeName\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const navigate = useNavigate();\n  const [isLongPress, setIsLongPress] = useState(false);\n  const [pressTimer, setPressTimer] = useState(null);\n  const messageSet = useRef(new Set());\n  const username = localStorage.getItem('activeUser');\n  useEffect(() => {\n    socket.emit('join', exchangeName, username);\n    const handleMessage = message => {\n      if (!messageSet.current.has(message)) {\n        messageSet.current.add(message);\n        setMessages(prevMessages => [...prevMessages, message]);\n      }\n    };\n    socket.on('message', handleMessage);\n    return () => {\n      socket.emit('leave', exchangeName, username);\n      socket.off('message', handleMessage);\n    };\n  }, [exchangeName, username]);\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      const timestamp = new Date().getTime();\n      const messageToSend = `${username}: ${newMessage} ${timestamp}`;\n      socket.emit('sendMessage', {\n        exchangeName,\n        message: messageToSend\n      });\n      if (!messageSet.current.has(messageToSend)) {\n        messageSet.current.add(messageToSend);\n        setMessages(prevMessages => [...prevMessages, messageToSend]);\n      }\n      setNewMessage('');\n    }\n  };\n  const handleBack = () => {\n    navigate('/rooms');\n  };\n\n  // Handle double-click or long press to make text bold\n  const handleTextFormat = () => {\n    setNewMessage(prevMessage => `**${prevMessage}**`);\n  };\n\n  // Start a timer for long press\n  const handleTouchStart = () => {\n    setPressTimer(setTimeout(() => {\n      setIsLongPress(true);\n      handleTextFormat();\n    }, 500)); // 500ms for long press detection\n  };\n\n  // Clear the timer if touch is released before 500ms\n  const handleTouchEnd = () => {\n    clearTimeout(pressTimer);\n    setIsLongPress(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: backIcon,\n        alt: \"Back\",\n        className: \"chat-back-icon\",\n        onClick: handleBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: groupIcon,\n          alt: \"Group Icon\",\n          className: \"group-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"room-name\",\n          children: exchangeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: videoIcon,\n          alt: \"Video Call\",\n          className: \"video-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: audioIcon,\n          alt: \"Audio Call\",\n          className: \"audio-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => {\n        const isOwnMessage = message.startsWith(`${username}:`);\n        const messageContent = message.substring(0, message.lastIndexOf(' '));\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${isOwnMessage ? 'sent' : 'received'}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            dangerouslySetInnerHTML: {\n              __html: messageContent.replace(/\\*\\*(.*?)\\*\\*/g, '<b>$1</b>')\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type here ...\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          onDoubleClick: handleTextFormat // Double-click event for desktop\n          ,\n          onTouchStart: handleTouchStart // Start timer on touch start for mobile\n          ,\n          onTouchEnd: handleTouchEnd // Clear timer on touch end for mobile\n          ,\n          onKeyDown: e => e.key === 'Enter' && handleSendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: attachmentIcon,\n          alt: \"Attach\",\n          className: \"attachment-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          className: \"send-button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: sendIcon,\n            alt: \"Send\",\n            className: \"send-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatScreen, \"rrCHl5MMZNhwVeFkkyV3X345da4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ChatScreen;\nexport default ChatScreen;\nvar _c;\n$RefreshReg$(_c, \"ChatScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","io","backIcon","groupIcon","sendIcon","audioIcon","videoIcon","attachmentIcon","jsxDEV","_jsxDEV","socket","ChatScreen","_s","exchangeName","messages","setMessages","newMessage","setNewMessage","navigate","isLongPress","setIsLongPress","pressTimer","setPressTimer","messageSet","Set","username","localStorage","getItem","emit","handleMessage","message","current","has","add","prevMessages","on","off","handleSendMessage","trim","timestamp","Date","getTime","messageToSend","handleBack","handleTextFormat","prevMessage","handleTouchStart","setTimeout","handleTouchEnd","clearTimeout","className","children","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","isOwnMessage","startsWith","messageContent","substring","lastIndexOf","dangerouslySetInnerHTML","__html","replace","type","placeholder","value","onChange","e","target","onDoubleClick","onTouchStart","onTouchEnd","onKeyDown","key","_c","$RefreshReg$"],"sources":["/Users/tanvirrahman/Desktop/chat-app/src/components/ChatScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport './ChatScreen.css';\nimport backIcon from '../assets/back.png';\nimport groupIcon from '../assets/group.png';\nimport sendIcon from '../assets/send.png';\nimport audioIcon from '../assets/audio.png';\nimport videoIcon from '../assets/video.png';\nimport attachmentIcon from '../assets/attachment.png';\n\nconst socket = io('http://localhost:5001');\n\nconst ChatScreen = () => {\n    const { exchangeName } = useParams();\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    const navigate = useNavigate();\n    const [isLongPress, setIsLongPress] = useState(false);\n    const [pressTimer, setPressTimer] = useState(null);\n\n    const messageSet = useRef(new Set());\n    const username = localStorage.getItem('activeUser');\n\n    useEffect(() => {\n        socket.emit('join', exchangeName, username);\n\n        const handleMessage = (message) => {\n            if (!messageSet.current.has(message)) {\n                messageSet.current.add(message);\n                setMessages((prevMessages) => [...prevMessages, message]);\n            }\n        };\n\n        socket.on('message', handleMessage);\n\n        return () => {\n            socket.emit('leave', exchangeName, username);\n            socket.off('message', handleMessage);\n        };\n    }, [exchangeName, username]);\n\n    const handleSendMessage = () => {\n        if (newMessage.trim()) {\n            const timestamp = new Date().getTime();\n            const messageToSend = `${username}: ${newMessage} ${timestamp}`;\n            socket.emit('sendMessage', { exchangeName, message: messageToSend });\n            if (!messageSet.current.has(messageToSend)) {\n                messageSet.current.add(messageToSend);\n                setMessages((prevMessages) => [...prevMessages, messageToSend]);\n            }\n            setNewMessage('');\n        }\n    };\n\n    const handleBack = () => {\n        navigate('/rooms');\n    };\n\n    // Handle double-click or long press to make text bold\n    const handleTextFormat = () => {\n        setNewMessage(prevMessage => `**${prevMessage}**`);\n    };\n\n    // Start a timer for long press\n    const handleTouchStart = () => {\n        setPressTimer(setTimeout(() => {\n            setIsLongPress(true);\n            handleTextFormat();\n        }, 500)); // 500ms for long press detection\n    };\n\n    // Clear the timer if touch is released before 500ms\n    const handleTouchEnd = () => {\n        clearTimeout(pressTimer);\n        setIsLongPress(false);\n    };\n\n    return (\n        <div className=\"chat-screen\">\n            <div className=\"chat-header\">\n                <img src={backIcon} alt=\"Back\" className=\"chat-back-icon\" onClick={handleBack} />\n                <div className=\"chat-info\">\n                    <img src={groupIcon} alt=\"Group Icon\" className=\"group-icon\" />\n                    <h2 className=\"room-name\">{exchangeName}</h2>\n                </div>\n                <div className=\"chat-actions\">\n                    <img src={videoIcon} alt=\"Video Call\" className=\"video-icon\" />\n                    <img src={audioIcon} alt=\"Audio Call\" className=\"audio-icon\" />\n                </div>\n            </div>\n            <div className=\"chat-messages\">\n                {messages.map((message, index) => {\n                    const isOwnMessage = message.startsWith(`${username}:`);\n                    const messageContent = message.substring(0, message.lastIndexOf(' '));\n                    return (\n                        <div\n                            key={index}\n                            className={`message ${isOwnMessage ? 'sent' : 'received'}`}\n                        >\n                            <p dangerouslySetInnerHTML={{ __html: messageContent.replace(/\\*\\*(.*?)\\*\\*/g, '<b>$1</b>') }}></p>\n                        </div>\n                    );\n                })}\n            </div>\n            <div className=\"chat-input\">\n                <div className=\"chat-input-container\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Type here ...\"\n                        value={newMessage}\n                        onChange={(e) => setNewMessage(e.target.value)}\n                        onDoubleClick={handleTextFormat} // Double-click event for desktop\n                        onTouchStart={handleTouchStart} // Start timer on touch start for mobile\n                        onTouchEnd={handleTouchEnd} // Clear timer on touch end for mobile\n                        onKeyDown={(e) => e.key === 'Enter' && handleSendMessage()}\n                    />\n                    <img src={attachmentIcon} alt=\"Attach\" className=\"attachment-icon\" />\n                    <button onClick={handleSendMessage} className=\"send-button\">\n                        <img src={sendIcon} alt=\"Send\" className=\"send-icon\" />\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ChatScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}