{"ast":null,"code":"var _jsxFileName = \"/Users/tanvirrahman/Desktop/chat-app/src/components/RoomsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './RoomsPage.css';\nimport groupsIcon from '../assets/groups.png'; // Assuming the groups icon is in assets\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomsPage = () => {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/exchanges') // Make sure this URL matches your backend API\n    .then(response => response.json()).then(data => setRooms(data)).catch(error => console.error('Error fetching exchange names:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rooms-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Available Groups To Join!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"rooms-list\",\n      children: rooms.map((room, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"room-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: groupsIcon,\n          alt: room,\n          className: \"room-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: room\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"proceed-button\",\n      children: \"Select And Proceed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomsPage, \"pVIe8tJm1V/hStRMkuwTtBQhqgo=\");\n_c = RoomsPage;\nexport default RoomsPage;\nvar _c;\n$RefreshReg$(_c, \"RoomsPage\");","map":{"version":3,"names":["React","useState","useEffect","groupsIcon","jsxDEV","_jsxDEV","RoomsPage","_s","rooms","setRooms","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","room","index","src","alt","_c","$RefreshReg$"],"sources":["/Users/tanvirrahman/Desktop/chat-app/src/components/RoomsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './RoomsPage.css';\nimport groupsIcon from '../assets/groups.png'; // Assuming the groups icon is in assets\n\nconst RoomsPage = () => {\n  const [rooms, setRooms] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/exchanges') // Make sure this URL matches your backend API\n      .then(response => response.json())\n      .then(data => setRooms(data))\n      .catch(error => console.error('Error fetching exchange names:', error));\n  }, []);\n\n  return (\n    <div className=\"rooms-page\">\n      <h1>Available Groups To Join!</h1>\n      <ul className=\"rooms-list\">\n        {rooms.map((room, index) => (\n          <li key={index} className=\"room-item\">\n            <img src={groupsIcon} alt={room} className=\"room-icon\" />\n            <span>{room}</span>\n          </li>\n        ))}\n      </ul>\n      <button className=\"proceed-button\">Select And Proceed</button>\n    </div>\n  );\n};\n\nexport default RoomsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,OAAOC,UAAU,MAAM,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,iCAAiC,CAAC,CAAC;IAAA,CACtCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC,CAAC;EAC3E,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKa,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBd,OAAA;MAAAc,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClClB,OAAA;MAAIa,SAAS,EAAC,YAAY;MAAAC,QAAA,EACvBX,KAAK,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBrB,OAAA;QAAgBa,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACnCd,OAAA;UAAKsB,GAAG,EAAExB,UAAW;UAACyB,GAAG,EAAEH,IAAK;UAACP,SAAS,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzDlB,OAAA;UAAAc,QAAA,EAAOM;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAFZG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLlB,OAAA;MAAQa,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAAChB,EAAA,CAxBID,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}