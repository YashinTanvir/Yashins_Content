{"ast":null,"code":"var _jsxFileName = \"/Users/tanvirrahman/Desktop/chat-app/src/components/ChatScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport './ChatScreen.css';\nimport backIcon from '../assets/back.png';\nimport groupIcon from '../assets/group.png';\nimport sendIcon from '../assets/send.png'; // Import the send icon\nimport audioIcon from '../assets/audio.png'; // Import the audio icon\nimport videoIcon from '../assets/video.png'; // Import the video icon\n\n// Ensure the socket connection is not duplicated\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5001');\nconst ChatScreen = () => {\n  _s();\n  const {\n    exchangeName\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const navigate = useNavigate();\n  const messageHandlerRef = useRef(null); // Ref to store the handler\n  const joinedExchangeRef = useRef(false); // Ref to track if we've joined the exchange\n\n  useEffect(() => {\n    if (!joinedExchangeRef.current) {\n      console.log(`Joining exchange: ${exchangeName}`);\n      socket.emit('join', exchangeName);\n      joinedExchangeRef.current = true; // Mark as joined\n    }\n\n    // Set up the message handler if it doesn't exist already\n    if (!messageHandlerRef.current) {\n      const handleMessage = message => {\n        console.log('Received message:', message); // Debugging log\n        setMessages(prevMessages => [...prevMessages, message]);\n      };\n      socket.on('message', handleMessage);\n\n      // Store the handler reference to avoid duplicate listeners\n      messageHandlerRef.current = handleMessage;\n    }\n\n    // Clean up when the component unmounts or exchangeName changes\n    return () => {\n      console.log(`Cleaning up listener for: ${exchangeName}`);\n      if (messageHandlerRef.current) {\n        socket.off('message', messageHandlerRef.current);\n        messageHandlerRef.current = null; // Reset the handler ref\n      }\n      joinedExchangeRef.current = false; // Reset joined flag\n    };\n  }, [exchangeName]);\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      console.log(`Sending message: ${newMessage}`);\n      socket.emit('sendMessage', {\n        exchangeName,\n        message: newMessage\n      });\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n      setNewMessage('');\n    }\n  };\n  const handleBack = () => {\n    navigate('/rooms');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: backIcon,\n        alt: \"Back\",\n        className: \"chat-back-icon\",\n        onClick: handleBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: groupIcon,\n          alt: \"Group Icon\",\n          className: \"group-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"room-name\",\n          children: exchangeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: audioIcon,\n          alt: \"Audio Call\",\n          className: \"audio-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: videoIcon,\n          alt: \"Video Call\",\n          className: \"video-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time\",\n          children: \"12:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type here ...\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && handleSendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"send-button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: sendIcon,\n          alt: \"Send\",\n          className: \"send-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatScreen, \"1iRaFqR2r4cAIT8mPi3AWHpTqAA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ChatScreen;\nexport default ChatScreen;\nvar _c;\n$RefreshReg$(_c, \"ChatScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","io","backIcon","groupIcon","sendIcon","audioIcon","videoIcon","jsxDEV","_jsxDEV","socket","ChatScreen","_s","exchangeName","messages","setMessages","newMessage","setNewMessage","navigate","messageHandlerRef","joinedExchangeRef","current","console","log","emit","handleMessage","message","prevMessages","on","off","handleSendMessage","trim","handleBack","className","children","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","placeholder","value","onChange","e","target","onKeyDown","key","_c","$RefreshReg$"],"sources":["/Users/tanvirrahman/Desktop/chat-app/src/components/ChatScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport './ChatScreen.css';\nimport backIcon from '../assets/back.png';\nimport groupIcon from '../assets/group.png';\nimport sendIcon from '../assets/send.png'; // Import the send icon\nimport audioIcon from '../assets/audio.png'; // Import the audio icon\nimport videoIcon from '../assets/video.png'; // Import the video icon\n\n// Ensure the socket connection is not duplicated\nconst socket = io('http://localhost:5001');\n\nconst ChatScreen = () => {\n    const { exchangeName } = useParams();\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    const navigate = useNavigate();\n\n    const messageHandlerRef = useRef(null); // Ref to store the handler\n    const joinedExchangeRef = useRef(false); // Ref to track if we've joined the exchange\n\n    useEffect(() => {\n        if (!joinedExchangeRef.current) {\n            console.log(`Joining exchange: ${exchangeName}`);\n            socket.emit('join', exchangeName);\n            joinedExchangeRef.current = true; // Mark as joined\n        }\n\n        // Set up the message handler if it doesn't exist already\n        if (!messageHandlerRef.current) {\n            const handleMessage = (message) => {\n                console.log('Received message:', message); // Debugging log\n                setMessages((prevMessages) => [...prevMessages, message]);\n            };\n\n            socket.on('message', handleMessage);\n\n            // Store the handler reference to avoid duplicate listeners\n            messageHandlerRef.current = handleMessage;\n        }\n\n        // Clean up when the component unmounts or exchangeName changes\n        return () => {\n            console.log(`Cleaning up listener for: ${exchangeName}`);\n            if (messageHandlerRef.current) {\n                socket.off('message', messageHandlerRef.current);\n                messageHandlerRef.current = null; // Reset the handler ref\n            }\n            joinedExchangeRef.current = false; // Reset joined flag\n        };\n    }, [exchangeName]);\n\n    const handleSendMessage = () => {\n        if (newMessage.trim()) {\n            console.log(`Sending message: ${newMessage}`);\n            socket.emit('sendMessage', { exchangeName, message: newMessage });\n            setMessages((prevMessages) => [...prevMessages, newMessage]);\n            setNewMessage('');\n        }\n    };\n\n    const handleBack = () => {\n        navigate('/rooms');\n    };\n\n    return (\n        <div className=\"chat-screen\">\n            <div className=\"chat-header\">\n                <img src={backIcon} alt=\"Back\" className=\"chat-back-icon\" onClick={handleBack} />\n                <div className=\"chat-info\">\n                    <img src={groupIcon} alt=\"Group Icon\" className=\"group-icon\" />\n                    <h2 className=\"room-name\">{exchangeName}</h2>\n                </div>\n                <div className=\"chat-actions\">\n                    <img src={audioIcon} alt=\"Audio Call\" className=\"audio-icon\" />\n                    <img src={videoIcon} alt=\"Video Call\" className=\"video-icon\" />\n                </div>\n            </div>\n            <div className=\"chat-messages\">\n                {messages.map((message, index) => (\n                    <div key={index} className=\"message\">\n                        <p>{message}</p>\n                        <span className=\"time\">12:00</span>\n                    </div>\n                ))}\n            </div>\n            <div className=\"chat-input\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Type here ...\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    onKeyDown={(e) => e.key === 'Enter' && handleSendMessage()}\n                />\n                <button onClick={handleSendMessage} className=\"send-button\">\n                    <img src={sendIcon} alt=\"Send\" className=\"send-icon\" />\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default ChatScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}