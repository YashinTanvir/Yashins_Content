{"ast":null,"code":"var _jsxFileName = \"/Users/tanvirrahman/Desktop/chat-app/src/components/RoomsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './RoomsPage.css';\nimport groupsIcon from '../assets/group.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomsPage = () => {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  const [newRoomName, setNewRoomName] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchRooms();\n  }, []);\n  const fetchRooms = () => {\n    fetch('http://localhost:5001/exchanges').then(response => response.json()).then(data => setRooms(data)).catch(error => console.error('Error fetching exchange names:', error));\n  };\n  const handleRoomClick = exchangeName => {\n    navigate(`/chat/${exchangeName}`);\n  };\n  const handleCreateRoom = () => {\n    if (newRoomName.trim()) {\n      fetch('http://localhost:5001/create-exchange', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          exchangeName: newRoomName\n        })\n      }).then(response => {\n        if (response.ok) {\n          fetchRooms(); // Refresh the list of rooms\n          setNewRoomName(''); // Clear the input field\n        } else {\n          console.error('Error creating room');\n        }\n      }).catch(error => console.error('Error creating room:', error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rooms-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Available Groups To Join!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"rooms-list\",\n      children: rooms.map((room, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"room-item\",\n        onClick: () => handleRoomClick(room),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: groupsIcon,\n          alt: room,\n          className: \"room-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: room\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newRoomName,\n      onChange: e => setNewRoomName(e.target.value),\n      placeholder: \"Enter new room name\",\n      className: \"new-room-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-room-button\",\n      onClick: handleCreateRoom,\n      children: \"Create Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(RoomsPage, \"AVIvcMdMF1A3AQAsvlapPdQRhnA=\", false, function () {\n  return [useNavigate];\n});\n_c = RoomsPage;\nexport default RoomsPage;\nvar _c;\n$RefreshReg$(_c, \"RoomsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","groupsIcon","jsxDEV","_jsxDEV","RoomsPage","_s","rooms","setRooms","newRoomName","setNewRoomName","navigate","fetchRooms","fetch","then","response","json","data","catch","error","console","handleRoomClick","exchangeName","handleCreateRoom","trim","method","headers","body","JSON","stringify","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","room","index","onClick","src","alt","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/tanvirrahman/Desktop/chat-app/src/components/RoomsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './RoomsPage.css';\nimport groupsIcon from '../assets/group.png';\n\nconst RoomsPage = () => {\n    const [rooms, setRooms] = useState([]);\n    const [newRoomName, setNewRoomName] = useState('');\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        fetchRooms();\n    }, []);\n\n    const fetchRooms = () => {\n        fetch('http://localhost:5001/exchanges')\n            .then(response => response.json())\n            .then(data => setRooms(data))\n            .catch(error => console.error('Error fetching exchange names:', error));\n    };\n\n    const handleRoomClick = (exchangeName) => {\n        navigate(`/chat/${exchangeName}`);\n    };\n\n    const handleCreateRoom = () => {\n        if (newRoomName.trim()) {\n            fetch('http://localhost:5001/create-exchange', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ exchangeName: newRoomName }),\n            })\n                .then(response => {\n                    if (response.ok) {\n                        fetchRooms(); // Refresh the list of rooms\n                        setNewRoomName(''); // Clear the input field\n                    } else {\n                        console.error('Error creating room');\n                    }\n                })\n                .catch(error => console.error('Error creating room:', error));\n        }\n    };\n\n    return (\n        <div className=\"rooms-page\">\n            <h1>Available Groups To Join!</h1>\n            <ul className=\"rooms-list\">\n                {rooms.map((room, index) => (\n                    <li key={index} className=\"room-item\" onClick={() => handleRoomClick(room)}>\n                        <img src={groupsIcon} alt={room} className=\"room-icon\" />\n                        <span>{room}</span>\n                    </li>\n                ))}\n            </ul>\n            <input \n                type=\"text\" \n                value={newRoomName} \n                onChange={(e) => setNewRoomName(e.target.value)} \n                placeholder=\"Enter new room name\" \n                className=\"new-room-input\"\n            />\n            <button className=\"create-room-button\" onClick={handleCreateRoom}>Create Room</button>\n        </div>\n    );\n};\n\nexport default RoomsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}