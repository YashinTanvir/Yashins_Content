{"ast":null,"code":"var _jsxFileName = \"/Users/tanvirrahman/Desktop/chat-app/src/components/RoomsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './RoomsPage.css';\nimport groupsIcon from '../assets/group.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomsPage = () => {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  const [newRoomName, setNewRoomName] = useState('');\n  const [isCreatingRoom, setIsCreatingRoom] = useState(false); // State to track the creation form visibility\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch('http://localhost:5001/exchanges').then(response => response.json()).then(data => setRooms(data)).catch(error => console.error('Error fetching exchange names:', error));\n  }, []);\n  const handleRoomClick = exchangeName => {\n    navigate(`/chat/${exchangeName}`);\n  };\n  const handleCreateRoom = () => {\n    if (newRoomName.trim() === '') {\n      alert('Room name cannot be empty');\n      return;\n    }\n    fetch('http://localhost:5001/create-exchange', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        exchangeName: newRoomName\n      })\n    }).then(response => {\n      if (response.ok) {\n        setRooms([...rooms, newRoomName]);\n        setIsCreatingRoom(false);\n        setNewRoomName('');\n      } else {\n        console.error('Error creating exchange');\n      }\n    }).catch(error => console.error('Error creating exchange:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rooms-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Available Groups To Join!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"rooms-list\",\n      children: rooms.map((room, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"room-item\",\n        onClick: () => handleRoomClick(room),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: groupsIcon,\n          alt: room,\n          className: \"room-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: room\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), isCreatingRoom ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-room-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newRoomName,\n        onChange: e => setNewRoomName(e.target.value),\n        placeholder: \"Enter room name\",\n        className: \"create-room-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateRoom,\n        className: \"create-room-button\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-room-toggle-button\",\n      onClick: () => setIsCreatingRoom(true),\n      children: \"Create Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(RoomsPage, \"wPQzndkJaIyOa/Lv9Is3+JzBKQM=\", false, function () {\n  return [useNavigate];\n});\n_c = RoomsPage;\nexport default RoomsPage;\nvar _c;\n$RefreshReg$(_c, \"RoomsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","groupsIcon","jsxDEV","_jsxDEV","RoomsPage","_s","rooms","setRooms","newRoomName","setNewRoomName","isCreatingRoom","setIsCreatingRoom","navigate","fetch","then","response","json","data","catch","error","console","handleRoomClick","exchangeName","handleCreateRoom","trim","alert","method","headers","body","JSON","stringify","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","room","index","onClick","src","alt","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/tanvirrahman/Desktop/chat-app/src/components/RoomsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './RoomsPage.css';\nimport groupsIcon from '../assets/group.png';\n\nconst RoomsPage = () => {\n    const [rooms, setRooms] = useState([]);\n    const [newRoomName, setNewRoomName] = useState('');\n    const [isCreatingRoom, setIsCreatingRoom] = useState(false); // State to track the creation form visibility\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        fetch('http://localhost:5001/exchanges')\n            .then(response => response.json())\n            .then(data => setRooms(data))\n            .catch(error => console.error('Error fetching exchange names:', error));\n    }, []);\n\n    const handleRoomClick = (exchangeName) => {\n        navigate(`/chat/${exchangeName}`);\n    };\n\n    const handleCreateRoom = () => {\n        if (newRoomName.trim() === '') {\n            alert('Room name cannot be empty');\n            return;\n        }\n\n        fetch('http://localhost:5001/create-exchange', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ exchangeName: newRoomName }),\n        })\n            .then(response => {\n                if (response.ok) {\n                    setRooms([...rooms, newRoomName]);\n                    setIsCreatingRoom(false);\n                    setNewRoomName('');\n                } else {\n                    console.error('Error creating exchange');\n                }\n            })\n            .catch(error => console.error('Error creating exchange:', error));\n    };\n\n    return (\n        <div className=\"rooms-page\">\n            <h1>Available Groups To Join!</h1>\n            <ul className=\"rooms-list\">\n                {rooms.map((room, index) => (\n                    <li key={index} className=\"room-item\" onClick={() => handleRoomClick(room)}>\n                        <img src={groupsIcon} alt={room} className=\"room-icon\" />\n                        <span>{room}</span>\n                    </li>\n                ))}\n            </ul>\n\n            {/* Toggle to show/hide the create room form */}\n            {isCreatingRoom ? (\n                <div className=\"create-room-form\">\n                    <input\n                        type=\"text\"\n                        value={newRoomName}\n                        onChange={(e) => setNewRoomName(e.target.value)}\n                        placeholder=\"Enter room name\"\n                        className=\"create-room-input\"\n                    />\n                    <button onClick={handleCreateRoom} className=\"create-room-button\">\n                        Create\n                    </button>\n                </div>\n            ) : (\n                <button className=\"create-room-toggle-button\" onClick={() => setIsCreatingRoom(true)}>\n                    Create Room\n                </button>\n            )}\n        </div>\n    );\n};\n\nexport default RoomsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,iBAAiB;AACxB,OAAOC,UAAU,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7D,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZc,KAAK,CAAC,iCAAiC,CAAC,CACnCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIV,QAAQ,CAACU,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC,CAAC;EAC/E,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,eAAe,GAAIC,YAAY,IAAK;IACtCV,QAAQ,CAAC,SAASU,YAAY,EAAE,CAAC;EACrC,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAIf,WAAW,CAACgB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC3BC,KAAK,CAAC,2BAA2B,CAAC;MAClC;IACJ;IAEAZ,KAAK,CAAC,uCAAuC,EAAE;MAC3Ca,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,YAAY,EAAEd;MAAY,CAAC;IACtD,CAAC,CAAC,CACGM,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACgB,EAAE,EAAE;QACbxB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEE,WAAW,CAAC,CAAC;QACjCG,iBAAiB,CAAC,KAAK,CAAC;QACxBF,cAAc,CAAC,EAAE,CAAC;MACtB,CAAC,MAAM;QACHW,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAC;MAC5C;IACJ,CAAC,CAAC,CACDD,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC;EAED,oBACIhB,OAAA;IAAK6B,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvB9B,OAAA;MAAA8B,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClClC,OAAA;MAAI6B,SAAS,EAAC,YAAY;MAAAC,QAAA,EACrB3B,KAAK,CAACgC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBrC,OAAA;QAAgB6B,SAAS,EAAC,WAAW;QAACS,OAAO,EAAEA,CAAA,KAAMpB,eAAe,CAACkB,IAAI,CAAE;QAAAN,QAAA,gBACvE9B,OAAA;UAAKuC,GAAG,EAAEzC,UAAW;UAAC0C,GAAG,EAAEJ,IAAK;UAACP,SAAS,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzDlC,OAAA;UAAA8B,QAAA,EAAOM;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAFdG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EAGJ3B,cAAc,gBACXP,OAAA;MAAK6B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7B9B,OAAA;QACIyC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAErC,WAAY;QACnBsC,QAAQ,EAAGC,CAAC,IAAKtC,cAAc,CAACsC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAChDI,WAAW,EAAC,iBAAiB;QAC7BjB,SAAS,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFlC,OAAA;QAAQsC,OAAO,EAAElB,gBAAiB;QAACS,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAElE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,gBAENlC,OAAA;MAAQ6B,SAAS,EAAC,2BAA2B;MAACS,OAAO,EAAEA,CAAA,KAAM9B,iBAAiB,CAAC,IAAI,CAAE;MAAAsB,QAAA,EAAC;IAEtF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACX;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAChC,EAAA,CA3EID,SAAS;EAAA,QAIMJ,WAAW;AAAA;AAAAkD,EAAA,GAJ1B9C,SAAS;AA6Ef,eAAeA,SAAS;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}